# create_db.py
import chromadb
import os
# Получаем абсолютный путь к текущей директории, где находится app.py
# Get the absolute path of the current directory where app.py is located
BASE_DIR = os.path.dirname(os.path.abspath(__file__))
# Expanded and translated facts for the RAG system
POLYMER_FACTS = [
    {
        "property": "FFV",
        "content": "Fractional Free Volume (FFV) is the portion of a polymer's volume not occupied by its molecules. A high FFV is associated with more flexible polymer chains and can increase gas permeability."
    },
    {
        "property": "FFV",
        "content": "Polymers with branched or irregular chains tend to have a higher FFV because their structure prevents tight packing, leading to more empty space."
    },
    {
        "property": "Density",
        "content": "Polymer density depends on how tightly the polymer chains are packed. High density often means the chains are closely aligned, a characteristic of crystalline regions."
    },
    {
        "property": "Density",
        "content": "Higher polymer density can correlate with stronger intermolecular forces, such as hydrogen bonds, which pull the chains closer together."
    },
    {
        "property": "Tc",
        "content": "Crystallization Temperature (Tc) is the temperature at which a polymer's chains begin to organize into a crystal-like structure. Polymers with symmetrical and regular repeating units tend to have a higher Tc."
    },
    {
        "property": "Tc",
        "content": "The process of crystallization in polymers is influenced by cooling rate; slower cooling typically allows more time for chains to align, resulting in a more crystalline structure."
    },
    {
        "property": "Rg",
        "content": "The Radius of Gyration (Rg) measures a polymer chain's size and compactness in solution. A larger Rg indicates a more extended, less compact chain conformation."
    },
    {
        "property": "Rg",
        "content": "Rg is a crucial property for understanding polymer behavior in solution, affecting viscosity and the way the polymer interacts with solvents."
    },
    {
        "property": "Tg",
        "content": "Glass Transition Temperature (Tg) is the temperature where a polymer transitions from a rigid, glassy state to a flexible, rubbery state. Bulky side groups on the polymer chain can increase Tg by hindering chain movement."
    },
    {
        "property": "project",
        "content": "This application predicts key physical properties of polymers from their chemical structure (SMILES string)."
    },
    {
        "property": "project",
        "content": "The purpose of this project is to quickly estimate polymer properties for materials science research, saving time on expensive lab experiments."
    },
    {
        "property": "how-it-works",
        "content": "The application uses a machine learning model, specifically LightGBM, to predict polymer properties based on a set of molecular descriptors generated by the RDKit library."
    },
    {
        "property": "how-it-works",
        "content": "The core of the system is a Retrieval-Augmented Generation (RAG) component. When you ask a question, the app searches a knowledge base (ChromaDB) for relevant facts and uses them to formulate a comprehensive answer."
    },
    {
        "property": "how-it-works",
        "content": "We use a vector database (ChromaDB) to store and efficiently retrieve facts about polymers, which is much faster than searching through a large text file."
    },
    {
        "property": "how-it-works",
        "content": "Molecular descriptors are numerical values that represent the chemical structure of a molecule. They are used as features to train our machine learning models."
    },
    {
        "property": "ethics",
        "content": "The models were trained on a finite dataset, which means they may not be accurate for all polymer types. This is a form of data bias that must be considered."
    },
    {
        "property": "ethics",
        "content": "Our machine learning models offer predictions, not experimental facts. These predictions should be verified in a lab to ensure safety and accuracy in real-world applications."
    },
    {
        "property": "ethics",
        "content": "The project uses the principle of explainability: by providing facts about polymer properties, the RAG system helps users understand the 'why' behind the predictions."
    },
    {
        "property": "Tc",
        "content": "The temperature of crystallization (Tc) is a critical parameter for polymer processing. A higher Tc can mean the material needs to be processed at higher temperatures."
    },
    {
        "property": "Density",
        "content": "Polymer density is affected by chain branching, with more branching leading to less efficient packing and lower density."
    },
    {
        "property": "FFV",
        "content": "Gas permeability in polymers, a key industrial property, is highly dependent on the fractional free volume (FFV)."
    }
]

# Path to store the database
DB_PATH = os.path.join(BASE_DIR, 'chroma_db')

print("Initializing ChromaDB...")
# Create a client that uses a local storage path
client = chromadb.PersistentClient(path=DB_PATH)

# Check if the collection exists and delete it to recreate a fresh one
try:
    client.delete_collection(name="polymer_facts")
    print("Old collection 'polymer_facts' deleted.")
except:
    pass

print("Creating new collection 'polymer_facts'...")
# Create a new collection (table) for our facts
collection = client.create_collection(name="polymer_facts")

print("Populating the collection with facts...")
# Add the facts to the collection
for i, fact in enumerate(POLYMER_FACTS):
    collection.add(
        documents=[fact["content"]],
        metadatas=[{"property": fact["property"]}],
        ids=[f"fact_{i}"]
    )

print("ChromaDB database successfully created and populated!")
print(f"Path to database: {os.path.abspath(DB_PATH)}")